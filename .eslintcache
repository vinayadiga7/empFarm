[{"C:\\Users\\HP\\reactProject\\empFarm\\src\\index.js":"1","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\App.js":"2","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Login.js":"3","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\LoginScreenImages.js":"4","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\PersonalFeed.js":"5","C:\\Users\\HP\\reactProject\\empfarm\\src\\index.js":"6","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\App.js":"7","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\PersonalFeed.js":"8","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Login.js":"9","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\LoginScreenImages.js":"10","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Modal.js":"11","C:\\Users\\HP\\reactproject\\empfarm\\src\\index.js":"12","C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\App.js":"13","C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\Login.js":"14","C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\PersonalFeed.js":"15","C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\Modal.js":"16","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Home.js":"17","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\store\\index.js":"18","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Profile.js":"19","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Signup.js":"20","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\NavBar.js":"21","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\reducers\\index.js":"22","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Posts.js":"23","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\PlaceCenter.js":"24","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Search.js":"25","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\helpers\\imageContainer.js":"26","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\helpers\\createUser.js":"27","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\ProfileMenu.js":"28","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\actionCreaters\\actionTypes.js":"29","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\actionCreaters\\index.js":"30","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Post.js":"31","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\helpers\\loginUser.js":"32"},{"size":188,"mtime":1615094919721,"results":"33","hashOfConfig":"34"},{"size":171,"mtime":1615949210354,"results":"35","hashOfConfig":"34"},{"size":3726,"mtime":1615949210356,"results":"36","hashOfConfig":"34"},{"size":2990,"mtime":1615949210357,"results":"37","hashOfConfig":"34"},{"size":334,"mtime":1615949210362,"results":"38","hashOfConfig":"34"},{"size":324,"mtime":1617770649873,"results":"39","hashOfConfig":"40"},{"size":171,"mtime":1617770649722,"results":"41","hashOfConfig":"40"},{"size":815,"mtime":1617770649771,"results":"42","hashOfConfig":"40"},{"size":4339,"mtime":1617770649749,"results":"43","hashOfConfig":"40"},{"size":2990,"mtime":1617770649758,"results":"44","hashOfConfig":"40"},{"size":781,"mtime":1617770649764,"results":"45","hashOfConfig":"40"},{"size":324,"mtime":1617535892210,"results":"46","hashOfConfig":"47"},{"size":171,"mtime":1615949210354,"results":"48","hashOfConfig":"47"},{"size":4339,"mtime":1617548446948,"results":"49","hashOfConfig":"47"},{"size":815,"mtime":1617642530329,"results":"50","hashOfConfig":"47"},{"size":781,"mtime":1617558732907,"results":"51","hashOfConfig":"47"},{"size":714,"mtime":1617770649725,"results":"52","hashOfConfig":"40"},{"size":475,"mtime":1617770649854,"results":"53","hashOfConfig":"40"},{"size":121,"mtime":1617770649777,"results":"54","hashOfConfig":"40"},{"size":9349,"mtime":1617770649822,"results":"55","hashOfConfig":"40"},{"size":2452,"mtime":1617770649767,"results":"56","hashOfConfig":"40"},{"size":786,"mtime":1617770649851,"results":"57","hashOfConfig":"40"},{"size":2854,"mtime":1617770649776,"results":"58","hashOfConfig":"40"},{"size":264,"mtime":1617770649773,"results":"59","hashOfConfig":"40"},{"size":510,"mtime":1617770649802,"results":"60","hashOfConfig":"40"},{"size":1022,"mtime":1617770649847,"results":"61","hashOfConfig":"40"},{"size":2080,"mtime":1617770649846,"results":"62","hashOfConfig":"40"},{"size":1520,"mtime":1617770649792,"results":"63","hashOfConfig":"40"},{"size":312,"mtime":1617770649840,"results":"64","hashOfConfig":"40"},{"size":710,"mtime":1617770649841,"results":"65","hashOfConfig":"40"},{"size":1628,"mtime":1617770649774,"results":"66","hashOfConfig":"40"},{"size":1872,"mtime":1617770649848,"results":"67","hashOfConfig":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"10us50t",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d24uj8",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lzpnnl",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\HP\\reactProject\\empFarm\\src\\index.js",[],["140","141"],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\App.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Login.js",["142"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport LoginScreenImages from \"./LoginScreenImages\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    background: \"linear-gradient(60deg, #66ffa6, #00b224)\",\r\n    padding: \"1.5rem\",\r\n    fontSize: \"1.6rem\",\r\n  },\r\n\r\n  textInput: {\r\n    marginBottom: \"1.5rem\",\r\n    \"& .MuiFormLabel-root\": {\r\n      fontSize: \"1.8rem\",\r\n      color: \"#00b224\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: \"1.8rem\",\r\n      borderBottom: \"2px solid #00b224\",\r\n      color: \"#373737\",\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  companyName: {\r\n    fontWeight: 400,\r\n    backgroundColor: \"#00b224\",\r\n    fontSize: \"25px\",\r\n    backgroundClip: \"text\",\r\n    \"-webkit-background-clip\": \"text\",\r\n    color: \"transparent\",\r\n    textAlign: \"center\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n});\r\n\r\nconst Login = (props) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"Form submitted!!\");\r\n    props.history.push(\"/feed\");\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"username\") {\r\n      setValues({ ...values, username: e.target.value });\r\n    } else if (e.target.name === \"password\") {\r\n      setValues({ ...values, password: e.target.value });\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item sm={12} md={6} lg={6}>\r\n        <LoginScreenImages />{\" \"}\r\n      </Grid>\r\n      <Grid item sm={12} md={6} lg={6}>\r\n        <form className=\"container\" autoComplete=\"off\" onSubmit={submitForm}>\r\n          <div className={classes.companyName}>EmpFarm</div>\r\n          <TextField\r\n            id=\"filled-search\"\r\n            label=\"username\"\r\n            type=\"email\"\r\n            name=\"username\"\r\n            variant=\"filled\"\r\n            className={classes.textInput}\r\n            value={values.username}\r\n            onChange={handleChange}\r\n            placeholder=\"abc@xyz.de\"\r\n          />\r\n          <TextField\r\n            id=\"filled-password\"\r\n            label=\"password\"\r\n            name=\"password\"\r\n            type={values.showPassword ? \"text\" : \"password\"}\r\n            autoComplete=\"current-password\"\r\n            variant=\"filled\"\r\n            value={values.password}\r\n            className={classes.textInput}\r\n            onChange={handleChange}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleToggle} onMouseDown={handleToggle}>\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          ></TextField>\r\n\r\n          <Button variant=\"contained\" type=\"submit\" className={classes.button}>\r\n            {\" \"}\r\n            Login\r\n          </Button>\r\n          <NavLink style={{ marginTop: \"1rem\" }} to=\"/signup\">\r\n            New User? Create new account\r\n          </NavLink>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\LoginScreenImages.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\PersonalFeed.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\index.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\App.js",[],["143","144"],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\PersonalFeed.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Login.js",["145"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n//import LoginScreenImages from \"./LoginScreenImages\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PlaceCenter from \"./PlaceCenter\";\r\nimport ImageContainer from \"./helpers/imageContainer\";\r\nimport { fetchUser } from \"./actionCreaters\";\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  color: #00b224;\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    background: \"linear-gradient(60deg, #66ffa6, #00b224)\",\r\n    padding: \"1.5rem\",\r\n    fontSize: \"5rem\",\r\n    \"& .MuiButton-label\": {\r\n      fontSize: \"2rem\",\r\n    },\r\n  },\r\n\r\n  textInput: {\r\n    marginBottom: \"1.5rem\",\r\n    \"& .MuiFormLabel-root\": {\r\n      fontSize: \"1.8rem\",\r\n      color: \"#00b224\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: \"1.8rem\",\r\n      borderBottom: \"2px solid #00b224\",\r\n      color: \"#373737\",\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  companyName: {\r\n    fontWeight: 700,\r\n    backgroundColor: \"#00b224\",\r\n    fontSize: \"3rem\",\r\n    backgroundClip: \"text\",\r\n    \"-webkit-background-clip\": \"text\",\r\n    color: \"transparent\",\r\n    textAlign: \"center\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n});\r\n\r\nconst Login = (props) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"Form submitted!!\");\r\n    //props.history.push(\"/feed\");\r\n    const userData = {\r\n      username: values.username,\r\n      password: values.password,\r\n    };\r\n    props.fetchUser(userData);\r\n    props.history.push(\"/feed\");\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"username\") {\r\n      setValues({ ...values, username: e.target.value });\r\n    } else if (e.target.name === \"password\") {\r\n      setValues({ ...values, password: e.target.value });\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <PlaceCenter>\r\n      <ImageContainer />\r\n      <div className=\"login-form-container\">\r\n        <form className=\"container\" autoComplete=\"off\" onSubmit={submitForm}>\r\n          <div className={classes.companyName}>EmpFarm</div>\r\n          <TextField\r\n            id=\"filled-search\"\r\n            label=\"username\"\r\n            name=\"username\"\r\n            variant=\"filled\"\r\n            className={classes.textInput}\r\n            value={values.username}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            id=\"filled-password\"\r\n            label=\"password\"\r\n            name=\"password\"\r\n            type={values.showPassword ? \"text\" : \"password\"}\r\n            autoComplete=\"current-password\"\r\n            variant=\"filled\"\r\n            value={values.password}\r\n            className={classes.textInput}\r\n            onChange={handleChange}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleToggle} onMouseDown={handleToggle}>\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          ></TextField>\r\n\r\n          <Button variant=\"contained\" type=\"submit\" className={classes.button}>\r\n            {\" \"}\r\n            Login\r\n          </Button>\r\n          <StyledNavLink style={{ marginTop: \"1rem\" }} to=\"/signup\">\r\n            New User? Create new account\r\n          </StyledNavLink>\r\n        </form>\r\n      </div>\r\n    </PlaceCenter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUser: (userData) => dispatch(fetchUser(userData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\LoginScreenImages.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Modal.js",[],"C:\\Users\\HP\\reactproject\\empfarm\\src\\index.js",[],"C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\App.js",[],"C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\Login.js",["146"],"C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\PersonalFeed.js",[],"C:\\Users\\HP\\reactproject\\empfarm\\src\\components\\Modal.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Home.js",["147"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport Profile from \"./Profile\";\r\nimport PersonalFeed from \"./PersonalFeed\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport \"./css/main.css\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/feed\" component={PersonalFeed} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\store\\index.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Profile.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Signup.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\NavBar.js",["148"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Search from \"./Search\";\r\nimport PorfileMenu from \"./ProfileMenu\";\r\nimport ProfileMenu from \"./ProfileMenu\";\r\n\r\nconst useStyles = makeStyles({\r\n  appBar: {\r\n    backgroundColor: \"#09AF0F\",\r\n    color: \"#f2f2f2\",\r\n    position: \"fixed\",\r\n    zIndex: 100,\r\n    top: 0,\r\n  },\r\n  menuIcons: {\r\n    \"& .MuiSvgIcon-root\": {\r\n      fontSize: \"2.5rem\",\r\n      color: \"#f2f2f2\",\r\n    },\r\n  },\r\n  input: {\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"#f2f2f2\",\r\n      fontSize: \"1.8rem\",\r\n      borderBottom: \"3px solid #f2f2f2\",\r\n    },\r\n    \"& .MuiInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\r\n      borderBottom: \"3px solid #f2f2f2\",\r\n    },\r\n  },\r\n});\r\n\r\nconst NavBar = () => {\r\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\" className={classes.appBar}>\r\n      <Toolbar className=\"toolbar\">\r\n        <div>\r\n          <Typography variant=\"h3\">EmpFarm</Typography>\r\n        </div>\r\n        <div>\r\n          <Search />\r\n        </div>\r\n        <div>\r\n          <IconButton className={classes.menuIcons}>\r\n            <Link to=\"/feed\">\r\n              <HomeIcon />\r\n            </Link>\r\n          </IconButton>\r\n\r\n          <IconButton className={classes.menuIcons}>\r\n            <Link to=\"/chat\">\r\n              <ChatIcon />\r\n            </Link>\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            className={classes.menuIcons}\r\n            onClick={() => {\r\n              showProfileMenu\r\n                ? setShowProfileMenu(false)\r\n                : setShowProfileMenu(true);\r\n            }}\r\n          >\r\n            {/* <Link to=\"/profile\">\r\n             \r\n            </Link> */}\r\n            <AccountCircleRoundedIcon />\r\n          </IconButton>\r\n          {showProfileMenu ? <ProfileMenu /> : null}\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\reducers\\index.js",["149"],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Posts.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\PlaceCenter.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Search.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\helpers\\imageContainer.js",["150"],"import React from \"react\";\r\nimport farm01 from \"../../images/empFarm-01.jpg\";\r\n\r\nconst ImageContainer = (props) => {\r\n  return (\r\n    <div style={{ height: \"100%\", width: \"50%\" }}>\r\n      <figure style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}>\r\n        <img\r\n          src={farm01}\r\n          alt=\"login page image\"\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n        />\r\n        <figcaption\r\n          style={{\r\n            fontSize: \"3rem\",\r\n            fontFamily: \"Roboto, sans-serif\",\r\n            fontWeight: \"700\",\r\n            color: \"#f2f2f2\",\r\n            position: \"absolute\",\r\n            bottom: \"10%\",\r\n            lineHeight: 1,\r\n            padding: \"1rem\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          “Agriculture is our wisest pursuit, because it will in the end\r\n          contribute most to real wealth, good morals, and happiness.” – Thomas\r\n          Jefferson\r\n        </figcaption>\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageContainer;\r\n","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\helpers\\createUser.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\ProfileMenu.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\actionCreaters\\actionTypes.js",[],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\actionCreaters\\index.js",["151"],"C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\Post.js",["152"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  orange: {\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n});\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n  const post = props.data;\r\n  const [likes, setLikes] = useState(post.likes);\r\n\r\n  const incrementLikesHandler = () => {\r\n    let incrementedLikes = likes + 1;\r\n    setLikes(incrementedLikes);\r\n  };\r\n\r\n  return (\r\n    <div key={post.id} className=\"posts-container__item\">\r\n      <div className=\"posts-container__item-header\">\r\n        <Avatar\r\n          className={`${classes.orange} posts-container__item-header-image`}\r\n        >\r\n          {post.user.username[0]}\r\n        </Avatar>\r\n        <span className=\"posts-container__item-header-text\">\r\n          {post.user.username}\r\n        </span>\r\n      </div>\r\n      <div className=\"posts-container__item-image-container\">\r\n        <img className=\"posts-container__item-image-actual\" src={post.image} />\r\n      </div>\r\n      <div>\r\n        <IconButton onClick={incrementLikesHandler}>\r\n          <ThumbUpAltOutlined /> {likes}\r\n        </IconButton>\r\n      </div>\r\n      <div>\r\n        <span style={{ marginRight: \"1rem\", fontWeight: 700 }}>\r\n          {post.user.username}\r\n        </span>\r\n        {post.caption.substr(0, 15)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","C:\\Users\\HP\\reactProject\\empfarm\\src\\components\\helpers\\loginUser.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":58,"column":9,"nodeType":"159","messageId":"160","endLine":58,"endColumn":16},{"ruleId":"153","replacedBy":"161"},{"ruleId":"155","replacedBy":"162"},{"ruleId":"157","severity":1,"message":"163","line":12,"column":19,"nodeType":"159","messageId":"160","endLine":12,"endColumn":29},{"ruleId":"157","severity":1,"message":"163","line":12,"column":19,"nodeType":"159","messageId":"160","endLine":12,"endColumn":29},{"ruleId":"157","severity":1,"message":"164","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"165","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":38,"column":1,"nodeType":"168","endLine":38,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":8,"column":9,"nodeType":"171","endLine":12,"endColumn":11},{"ruleId":"157","severity":1,"message":"172","line":3,"column":3,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":37,"column":9,"nodeType":"171","endLine":37,"endColumn":80},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar",["175"],["176"],"'useHistory' is defined but never used.","'NavBar' is defined but never used.","'PorfileMenu' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'FETCH_USERDATA' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]