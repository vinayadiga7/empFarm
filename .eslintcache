[{"C:\\Users\\HP\\reactProject\\empFarm\\src\\index.js":"1","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\App.js":"2","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Login.js":"3","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\LoginScreenImages.js":"4","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Home.js":"5","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\NavBar.js":"6","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Profile.js":"7","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\PersonalFeed.js":"8","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Search.js":"9","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Posts.js":"10","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Post.js":"11","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Signup.js":"12"},{"size":188,"mtime":1615094919721,"results":"13","hashOfConfig":"14"},{"size":171,"mtime":1615097277697,"results":"15","hashOfConfig":"14"},{"size":3726,"mtime":1615173466719,"results":"16","hashOfConfig":"14"},{"size":2990,"mtime":1615097277702,"results":"17","hashOfConfig":"14"},{"size":734,"mtime":1615113215003,"results":"18","hashOfConfig":"14"},{"size":1941,"mtime":1615097277703,"results":"19","hashOfConfig":"14"},{"size":121,"mtime":1615097277751,"results":"20","hashOfConfig":"14"},{"size":334,"mtime":1615097277704,"results":"21","hashOfConfig":"14"},{"size":510,"mtime":1615097277752,"results":"22","hashOfConfig":"14"},{"size":2854,"mtime":1615097277750,"results":"23","hashOfConfig":"14"},{"size":1267,"mtime":1615097277749,"results":"24","hashOfConfig":"14"},{"size":5900,"mtime":1615181708980,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"10us50t",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\HP\\reactProject\\empFarm\\src\\index.js",[],["54","55"],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\App.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Login.js",["56"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport LoginScreenImages from \"./LoginScreenImages\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    background: \"linear-gradient(60deg, #66ffa6, #00b224)\",\r\n    padding: \"1.5rem\",\r\n    fontSize: \"1.6rem\",\r\n  },\r\n\r\n  textInput: {\r\n    marginBottom: \"1.5rem\",\r\n    \"& .MuiFormLabel-root\": {\r\n      fontSize: \"1.8rem\",\r\n      color: \"#00b224\",\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: \"1.8rem\",\r\n      borderBottom: \"2px solid #00b224\",\r\n      color: \"#373737\",\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  companyName: {\r\n    fontWeight: 400,\r\n    backgroundColor: \"#00b224\",\r\n    fontSize: \"25px\",\r\n    backgroundClip: \"text\",\r\n    \"-webkit-background-clip\": \"text\",\r\n    color: \"transparent\",\r\n    textAlign: \"center\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n});\r\n\r\nconst Login = (props) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"Form submitted!!\");\r\n    props.history.push(\"/feed\");\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"username\") {\r\n      setValues({ ...values, username: e.target.value });\r\n    } else if (e.target.name === \"password\") {\r\n      setValues({ ...values, password: e.target.value });\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item sm={12} md={6} lg={6}>\r\n        <LoginScreenImages />{\" \"}\r\n      </Grid>\r\n      <Grid item sm={12} md={6} lg={6}>\r\n        <form className=\"container\" autoComplete=\"off\" onSubmit={submitForm}>\r\n          <div className={classes.companyName}>EmpFarm</div>\r\n          <TextField\r\n            id=\"filled-search\"\r\n            label=\"username\"\r\n            type=\"email\"\r\n            name=\"username\"\r\n            variant=\"filled\"\r\n            className={classes.textInput}\r\n            value={values.username}\r\n            onChange={handleChange}\r\n            placeholder=\"abc@xyz.de\"\r\n          />\r\n          <TextField\r\n            id=\"filled-password\"\r\n            label=\"password\"\r\n            name=\"password\"\r\n            type={values.showPassword ? \"text\" : \"password\"}\r\n            autoComplete=\"current-password\"\r\n            variant=\"filled\"\r\n            value={values.password}\r\n            className={classes.textInput}\r\n            onChange={handleChange}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleToggle} onMouseDown={handleToggle}>\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          ></TextField>\r\n\r\n          <Button variant=\"contained\" type=\"submit\" className={classes.button}>\r\n            {\" \"}\r\n            Login\r\n          </Button>\r\n          <NavLink style={{ marginTop: \"1rem\" }} to=\"/signup\">\r\n            New User? Create new account\r\n          </NavLink>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\LoginScreenImages.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Home.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\NavBar.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Profile.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\PersonalFeed.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Search.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Posts.js",[],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Post.js",["57"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  orange: {\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n});\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n  const post = props.data;\r\n  return (\r\n    <div key={post.id} className=\"posts-container__item\">\r\n      <div className=\"posts-container__item-header\">\r\n        <Avatar\r\n          className={`${classes.orange} posts-container__item-header-image`}\r\n        >\r\n          {post.user.username[0]}\r\n        </Avatar>\r\n        <span className=\"posts-container__item-header-text\">\r\n          {post.user.username}\r\n        </span>\r\n      </div>\r\n      <div className=\"posts-container__item-image-container\">\r\n        <img className=\"posts-container__item-image-actual\" src={post.image} />\r\n      </div>\r\n      <div>\r\n        <IconButton>\r\n          <ThumbUpAltOutlined /> {post.likes}\r\n        </IconButton>\r\n      </div>\r\n      <div>{post.caption}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n",["58","59"],"C:\\Users\\HP\\reactProject\\empFarm\\src\\components\\Signup.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":58,"column":9,"nodeType":"66","messageId":"67","endLine":58,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":30,"column":9,"nodeType":"70","endLine":30,"endColumn":80},{"ruleId":"60","replacedBy":"71"},{"ruleId":"62","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["73"],["74"],"no-global-assign","no-unsafe-negation"]